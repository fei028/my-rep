<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xlkh.platform.dao.system.SysRoleDao" >
  <resultMap id="sysRole" type="SysRole" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="role_remark" property="roleRemark" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, role_desc, role_remark, create_user, create_time, update_user, 
    update_time
  </sql>
  <!-- select部分 -->
  <sql id="selector">
  	SELECT
  	<if test="fields != null">
  		${fields}
  	</if>
  	<if test="fields == null">
  		<include refid="Base_Column_List"></include>
  	</if>
  	FROM sys_role
  </sql>
  <!-- where部分 -->
  <sql id="where">
    <where>
		<if test="roleId != null">
			AND role_id = #{roleId}
		</if>
		<if test="roleName != null">
			AND role_name = #{roleName}
		</if>
		<if test="roleDesc != null">
			AND role_desc = #{roleDesc}
		</if>
		<if test="roleRemark != null">
			AND role_remark = #{roleRemark}
		</if>
		<if test="createUser != null">
			AND create_user = #{createUser}
		</if>
		<if test="createTime != null">
			AND create_time = #{createTime}
		</if>
		<if test="updateUser != null">
			AND update_user = #{updateUser}
		</if>
		<if test="updateTime != null">
			AND update_time = #{updateTime}
		</if>
	</where>
  </sql>
  
  <sql id="orderBy">
  	<if test="orderFields != null and orderFields.size()>0">
  		ORDER BY
  		<foreach collection="orderFields" item="orderField" separator=",">
  			${orderField.field} ${orderField.order}
  		</foreach>
  	</if>
  </sql>
  
  <sql id="limit">
    <if test="startRow !=null">
    	LIMIT ${startRow},${pageSize}
    </if>
  </sql>
  <!-- 条件查询 -->
  <select id="selectSysRolesWithCondition" resultMap="sysRole" parameterType="SysRoleQuery">
  	<include refid="selector"></include>
  	<include refid="where"></include>
  	<include refid="orderBy"></include>
  	<include refid="limit"></include>
  </select>
  
  <select id="selectByKey" resultMap="sysRole" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByKey" parameterType="java.lang.Integer" >
    delete from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="SysRole" >
    insert into sys_role (role_id, role_name, role_desc, 
      role_remark, create_user, create_time, 
      update_user, update_time)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{roleRemark,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="SysRole" useGeneratedKeys="true" keyProperty="roleId">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="roleRemark != null" >
        role_remark,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null" >
        #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="SysRole" >
    update sys_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null" >
        role_remark = #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <!-- <update id="updateByPrimaryKey" parameterType="SysRoleQuery" >
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_remark = #{roleRemark,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update> -->
</mapper>